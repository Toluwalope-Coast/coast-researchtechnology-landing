'use client'

import React, { useState, useEffect } from 'react';
import TestimonialCard from '../cards/TestimonialCards';
import { ITestimonialsProps } from '@/utils/type';

const TestimonialsCarousel: React.FC<ITestimonialsProps> = ({ testimonials }) => {
  const sortedTestimonials = [...testimonials].sort((a, b) => a.position - b.position);
  const defaultActiveIndex = sortedTestimonials.findIndex(testimonial => testimonial.position === 2);
  const [activeIndex, setActiveIndex] = useState<number>(defaultActiveIndex !== -1 ? defaultActiveIndex : 0);

  useEffect(() => {
    const interval = setInterval(() => {
      setActiveIndex((prevIndex) => (prevIndex + 1) % sortedTestimonials.length);
    }, 5000);

    return () => clearInterval(interval);
  }, [sortedTestimonials.length]);

  const handleDotClick = (position: number) => {
    const index = sortedTestimonials.findIndex(testimonial => testimonial.position === position);
    setActiveIndex(index !== -1 ? index : 0);
  };

  return (
    <section className="testimonials px-16 md:px-28">
      <div className="mx-auto">
        <div className="owl-carousel grid md:grid-cols-3 md:gap-12">
          {sortedTestimonials.map((testimonial, index) => {
            const adjustedIndex = (index + activeIndex) % sortedTestimonials.length;
            const isActive = adjustedIndex === 0;
            return <TestimonialCard testimonial={testimonial} isActive={isActive} key={testimonial.id} />;
          })}
        </div>
        <div className="flex justify-center mb-16">
          {sortedTestimonials.map(({ position }) => (
            <div
              key={position}
              className={`w-3 h-3 mx-1 rounded-full cursor-pointer ${position === activeIndex + 1 ? 'bg-purple-500' : 'bg-gray-500'}`}
              onClick={() => handleDotClick(position)}
            />
          ))}
        </div>
      </div>
    </section>
  );
};

export default TestimonialsCarousel;


